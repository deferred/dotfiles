{{- if eq .chezmoi.os "linux" -}}
{{- if eq .chezmoi.osRelease.id "debian" -}}

#!/bin/bash
set -euo pipefail
IFS=$'\n\t'

exists() {
    command -v "$1" >/dev/null 2>&1
}

# setup apt repos
sudo apt-get update

if ! [ -d /etc/apt/keyrings ]; then
  sudo apt-get install ca-certificates curl
  sudo install -m 0755 -d /etc/apt/keyrings

  # docker
  # https://docs.docker.com/engine/install/debian/#install-using-the-repository
  if ! exists docker; then
    sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
      $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  fi
  
  # speedtest
  if ! exists speedtest; then
    sudo curl -fsSL https://packagecloud.io/ookla/speedtest-cli/gpgkey -o /etc/apt/keyrings/speedtest.asc
    sudo chmod a+r /etc/apt/keyrings/speedtest.asc
    echo \
      "deb [signed-by=/etc/apt/keyrings/speedtest.asc] https://packagecloud.io/ookla/speedtest-cli/debian \
      $(. /etc/os-release && echo "$VERSION_CODENAME") main" | \
      sudo tee /etc/apt/sources.list.d/speedtest.list > /dev/null
  fi

  sudo apt-get update
fi

packagelist=(
  bat
  btop 
  containerd.io
  cpufetch
  curl
  docker-buildx-plugin
  docker-ce
  docker-ce-cli
  docker-compose-plugin
  duf
  exa 
  fd-find
  fzf
  git 
  htop
  httpie
  iperf3 
  jq
  make
  mc
  ncdu
  neofetch
  nnn
  pipx
  python3
  ripgrep
  rsync
  speedtest
  telnet
  thefuck
  tldr
  tmux
  wget
  zoxide
  zsh

  # neovim
  build-essential
  cmake
  gettext
  ninja-build 
  unzip

  # asdf-nodejs
  dirmngr
  gpg
  gawk
)

sudo apt-get install -y ${packagelist[@]}

mkdir -p ~/.local/bin

# asdf
# https://asdf-vm.com/guide/getting-started.html#_2-download-asdf
if ! exists asdf; then
    git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0
fi

# bat
# https://github.com/sharkdp/bat#on-ubuntu-using-apt
ln -sf /usr/bin/batcat ~/.local/bin/bat

# fd
# https://github.com/sharkdp/fd?tab=readme-ov-file#on-debian
ln -sf $(which fdfind) ~/.local/bin/fd

# neovim
if ! exists nvim; then
  git clone --depth 1 --branch stable https://github.com/neovim/neovim.git /tmp/neovim
  ( cd /tmp/neovim \
    && make CMAKE_BUILD_TYPE=RelWithDebInfo \
    && sudo make install 
  )
  rm -rf /tmp/neovim
fi

# lazygit
# https://github.com/jesseduffield/lazygit#ubuntu
if ! exists lazygit; then
  LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
  curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_$(dpkg --print-architecture).tar.gz"
  tar xf lazygit.tar.gz lazygit
  sudo install lazygit /usr/local/bin
  rm lazygit.tar.gz lazygit
fi

# rust
# https://www.rust-lang.org/tools/install
# https://github.com/rust-lang/rustup/issues/297#issuecomment-444818896
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
. "$HOME/.cargo/env"

{{ end -}}
{{ end -}}
