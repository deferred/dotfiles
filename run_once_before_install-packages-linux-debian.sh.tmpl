{{- if eq .chezmoi.os "linux" -}}
{{- if or (eq .chezmoi.osRelease.id "debian") (eq .chezmoi.osRelease.id "raspbian") -}}

#!/bin/bash

# setup apt repos
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg dirmngr lsb-release

# docker
# https://docs.docker.com/engine/install/debian/#install-using-the-repository
sudo install -m 0755 -d /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor | sudo tee /etc/apt/keyrings/docker.gpg > /dev/null
sudo chmod a+r /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# speedtest
# https://pimylifeup.com/raspberry-pi-internet-speed-monitor/
curl -L https://packagecloud.io/ookla/speedtest-cli/gpgkey | sudo gpg --dearmor | sudo tee /usr/share/keyrings/speedtestcli-archive-keyring.gpg >/dev/null
echo \
  "deb [signed-by=/usr/share/keyrings/speedtestcli-archive-keyring.gpg] https://packagecloud.io/ookla/speedtest-cli/debian/ $(lsb_release -cs) main" | \
  sudo tee  /etc/apt/sources.list.d/speedtest.list

sudo apt-get update

packagelist=(
  bat
  btop 
  containerd.io
  cpufetch
  curl
  docker-buildx-plugin
  docker-ce
  docker-ce-cli
  docker-compose-plugin
  duf
  exa 
  fzf
  git 
  htop
  httpie
  iperf3 
  jq
  make
  mc
  ncdu
  neofetch
  nnn
  pipx
  python3
  ripgrep
  rsync
  speedtest
  telnet
  thefuck
  tldr
  wget
  zoxide
  zsh
)

sudo apt-get install -y ${packagelist[@]}

# ohmyzsh
# https://github.com/ohmyzsh/ohmyzsh#unattended-install
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

# bat
# https://github.com/sharkdp/bat#on-ubuntu-using-apt
mkdir -p ~/.local/bin
ln -sf /usr/bin/batcat ~/.local/bin/bat

# lazygit
# https://github.com/jesseduffield/lazygit#ubuntu
translate_arch() {
  local arch=$(dpkg --print-architecture)

  if [ "$arch" == "armhf" ]; then
    echo "armv6"
  else
    echo "x86_64"
  fi
}
LAZYGIT_VERSION=$(curl -s "https://api.github.com/repos/jesseduffield/lazygit/releases/latest" | grep -Po '"tag_name": "v\K[^"]*')
curl -Lo lazygit.tar.gz "https://github.com/jesseduffield/lazygit/releases/latest/download/lazygit_${LAZYGIT_VERSION}_Linux_$(translate_arch).tar.gz"
tar xf lazygit.tar.gz lazygit
sudo install lazygit /usr/local/bin
rm lazygit.tar.gz lazygit

# rust
# https://www.rust-lang.org/tools/install
# https://github.com/rust-lang/rustup/issues/297#issuecomment-444818896
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

# node
# https://github.com/nvm-sh/nvm#usage
. ~/.nvm/nvm.sh
nvm install node

{{ end -}}
{{ end -}}
